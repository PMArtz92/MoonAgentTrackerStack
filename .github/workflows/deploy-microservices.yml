name: Deploy Microservices to EKS

on:
  push:
    branches: [main]
    paths:
      - "agent-service/**"
      - "integration-service/**"
      - "notification-service/**"

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - name: agent-service
            path: agent-service
            port: 8000
            ecr: agent-service

          - name: integration-service
            path: integration-service
            port: 8001
            ecr: integration-service

          - name: notification-service
            path: notification-service
            port: 8002
            ecr: notification-service

    defaults:
      run:
        working-directory: ${{ matrix.path }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::924918964891:role/GitHubActionsEKSDeployRole
          role-session-name: github-actions-session
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        env:
          IMAGE_TAG: ${{ github.sha }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/${{ matrix.ecr }}:$IMAGE_TAG .
          docker push $ECR_REGISTRY/${{ matrix.ecr }}:$IMAGE_TAG

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig \
            --region ap-southeast-1 \
            --name moon-insurance

      - name: Verify kubectl access
        run: kubectl get nodes

      - name: Patch deployment image in EKS
        env:
          IMAGE_TAG: ${{ github.sha }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          kubectl set image deployment/${{ matrix.name }}-deployment \
            ${{ matrix.name }}=$ECR_REGISTRY/${{ matrix.ecr }}:$IMAGE_TAG
